using System.Collections.ObjectModel;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using CommunityToolkit.Mvvm.ComponentModel;
using MauiApp2.Model;
using MauiApp2.Model.CourseModel;
using Microsoft.Maui.Storage;

namespace MauiApp2.ViewModel
{
    public partial class CourseViewModel : ObservableObject
    {
        [ObservableProperty]
        private ObservableCollection<Course> availableCourses = new();

        public CourseViewModel()
        {
        }

        public async Task LoadCoursesAsync()
        {
            try
            {
                System.Diagnostics.Debug.WriteLine("üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î courses.json...");

                using var stream = await FileSystem.OpenAppPackageFileAsync("courses.json");
                using var reader = new StreamReader(stream);
                var json = await reader.ReadToEndAsync();

                var courses = JsonSerializer.Deserialize<List<Course>>(json);

                if (courses != null && courses.Count > 0)
                {
                    System.Diagnostics.Debug.WriteLine($"‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤ {courses.Count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");

                    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï AvailableCourses ‡∏ö‡∏ô Main Thread
                    MainThread.BeginInvokeOnMainThread(() =>
                    {
                        AvailableCourses.Clear(); // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏≠‡∏≠‡∏Å
                        foreach (var course in courses)
                        {
                            System.Diagnostics.Debug.WriteLine($"üìö ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤: {course.SubjectName ?? "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠"} ‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤: {course.SubjectId ?? "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™"}");
                            AvailableCourses.Add(course); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ß‡∏¥‡∏ä‡∏≤‡πÉ‡∏´‡∏°‡πà
                        }
                    });
                }
                else
                {
                    System.Diagnostics.Debug.WriteLine("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô JSON!");
                }
            }
            catch (Exception ex)
            {
                System.Diagnostics.Debug.WriteLine($"‚ùå Error loading courses: {ex.Message}");
            }
        }

    }
}
