using MauiApp2.Model.RegisterCourseModel;
using MauiApp2.ViewModel;

namespace MauiApp2.Pages;

[QueryProperty("UserEmail", "UserEmail")]
public partial class RegisterCoursePage : ContentPage
{
    public string? UserEmail { get; set; }
    private RegisterCourseViewModel _viewModel;

    public RegisterCoursePage()
    {
        InitializeComponent();
        _viewModel = new RegisterCourseViewModel();
        BindingContext = _viewModel;
        System.Diagnostics.Debug.WriteLine("üìå BindingContext ‡∏Ç‡∏≠‡∏á RegisterCoursePage ‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß!");
    }

    public async void OnBackButtonClicked(object sender, EventArgs e)
    {
        // ‡∏™‡πà‡∏á UserEmail ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ IndexPage ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
        await Shell.Current.GoToAsync($"IndexPage?UserEmail={Uri.EscapeDataString(UserEmail)}");
    }

    protected override async void OnAppearing()
    {
        base.OnAppearing();
        System.Diagnostics.Debug.WriteLine("‚úÖ OnAppearing() ‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å!");

        await _viewModel.LoadRegisterCoursesAsync(UserEmail); // ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á

        if (_viewModel.RegisteredSubjects == null || _viewModel.RegisteredSubjects.Count == 0)
        {
            System.Diagnostics.Debug.WriteLine("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÅ‡∏™‡∏î‡∏á!");
        }
        else
        {
            foreach (var registerCourse in _viewModel.RegisteredSubjects)
            {
                foreach (var registeredCourse in registerCourse.RegisteredCourses)
                {
                    System.Diagnostics.Debug.WriteLine($"üìö ‡πÄ‡∏ó‡∏≠‡∏°: {registeredCourse.Term}, ‡∏õ‡∏µ: {registeredCourse.Year}, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏¥‡∏ä‡∏≤: {registeredCourse.Subjects.Count}");

                    foreach (var subject in registeredCourse.Subjects)
                    {
                        System.Diagnostics.Debug.WriteLine($"‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤: {subject.SubjectName}, ‡∏£‡∏´‡∏±‡∏™‡∏ß‡∏¥‡∏ä‡∏≤: {subject.SubjectId}");
                    }
                }
            }

        }

        if (!string.IsNullOrEmpty(UserEmail))
        {
            System.Diagnostics.Debug.WriteLine($"üì© UserEmail received in CoursePage: {UserEmail}");
        }
        else
        {
            System.Diagnostics.Debug.WriteLine("‚ùå No UserEmail received");
        }
    }
}
